{
  "consumer": {
    "name": "QuestManagerApiClient"
  },
  "interactions": [
    {
      "description": "A PUT request to /quest/{:id} endpoint with COMPLETED status",
      "key": "205b4906",
      "pending": false,
      "providerStates": [
        {
          "name": "A quest exists with ID 1 and status IN_PROGRESS"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "COMPLETED"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.status": {
              "regex": "COMPLETED",
              "type": "Regex"
            }
          },
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "COMPLETED"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "id": 1,
            "name": "string",
            "reward": "string",
            "status": "COMPLETED"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.name": {
              "size": 20,
              "type": "RandomString"
            },
            "$.reward": {
              "size": 20,
              "type": "RandomString"
            },
            "$.status": {
              "regex": "COMPLETED",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "number"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.reward": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "COMPLETED"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 200
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A PUT request to /quest/{:id} endpoint with IN_PROGRESS status",
      "key": "1e6cb204",
      "pending": false,
      "providerStates": [
        {
          "name": "A quest exists with ID 1 and status NOT_STARTED"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "IN_PROGRESS"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.status": {
              "regex": "IN_PROGRESS",
              "type": "Regex"
            }
          },
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "IN_PROGRESS"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "id": 1,
            "name": "string",
            "reward": "string",
            "status": "IN_PROGRESS"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.name": {
              "size": 20,
              "type": "RandomString"
            },
            "$.reward": {
              "size": 20,
              "type": "RandomString"
            },
            "$.status": {
              "regex": "IN_PROGRESS",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "number"
                }
              ]
            },
            "$.name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.reward": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "IN_PROGRESS"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 200
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A PUT request for a non-existent quest",
      "key": "fe2d107f",
      "pending": false,
      "providerStates": [
        {
          "name": "Quest with ID 1 does not exist in the database"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "COMPLETED"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "code": "NOT_FOUND",
            "message": "Quest not found"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.code": {
              "regex": "NOT_FOUND",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.code": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "NOT_FOUND"
                }
              ]
            },
            "$.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 404
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A PUT request to revert a quest status from COMPLETED to IN_PROGRESS",
      "key": "68040e99",
      "pending": false,
      "providerStates": [
        {
          "name": "Quest with ID 1 exists in the database and status is COMPLETED"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "IN_PROGRESS"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.status": {
              "regex": "IN_PROGRESS",
              "type": "Regex"
            }
          },
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "IN_PROGRESS"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "code": "INVALID_ACTION",
            "message": "Cannot revert quest status from COMPLETED to IN_PROGRESS"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.code": {
              "regex": "INVALID_ACTION",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.code": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "INVALID_ACTION"
                }
              ]
            },
            "$.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A PUT request to revert a quest status from COMPLETED to NOT_STARTED",
      "key": "64372573",
      "pending": false,
      "providerStates": [
        {
          "name": "Quest with ID 1 exists in the database and status is COMPLETED"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "NOT_STARTED"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.status": {
              "regex": "NOT_STARTED",
              "type": "Regex"
            }
          },
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "NOT_STARTED"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "code": "INVALID_ACTION",
            "message": "Cannot revert quest status from COMPLETED to NOT_STARTED"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.code": {
              "regex": "INVALID_ACTION",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.code": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "INVALID_ACTION"
                }
              ]
            },
            "$.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A PUT request to revert a quest status from IN_PROGRESS to NOT_STARTED",
      "key": "9b1dbabf",
      "pending": false,
      "providerStates": [
        {
          "name": "Quest with ID 1 exists in the database and status is COMPLETED"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "NOT_STARTED"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.status": {
              "regex": "NOT_STARTED",
              "type": "Regex"
            }
          },
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "NOT_STARTED"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "code": "INVALID_ACTION",
            "message": "Cannot revert quest status from IN_PROGRESS to NOT_STARTED"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.code": {
              "regex": "INVALID_ACTION",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.code": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "INVALID_ACTION"
                }
              ]
            },
            "$.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A PUT request for a quest with invalid status",
      "key": "71f702f7",
      "pending": false,
      "providerStates": [
        {
          "name": "Quest with ID 1 exists in the database"
        }
      ],
      "request": {
        "body": {
          "content": {
            "status": "?!COMPLETED$\uDFE7\uFCC4\uE1E3\u7535\u8D32"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.status": {
              "regex": "^(?!(?:NOT_STARTED|IN_PROGRESS|COMPLETED)$).+$",
              "type": "Regex"
            }
          },
          "path": {
            "dataType": "STRING",
            "expression": "/quest/${id}",
            "type": "ProviderState"
          }
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ]
        },
        "matchingRules": {
          "body": {
            "$.status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^(?!(?:NOT_STARTED|IN_PROGRESS|COMPLETED)$).+$"
                }
              ]
            }
          }
        },
        "method": "PUT",
        "path": "/quest/1"
      },
      "response": {
        "body": {
          "content": {
            "code": "BAD_REQUEST",
            "message": "Status must be one of NOT_STARTED, IN_PROGRESS, COMPLETED"
          },
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$.code": {
              "regex": "BAD_REQUEST",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$.code": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BAD_REQUEST"
                }
              ]
            },
            "$.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 400
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    },
    {
      "description": "A GET request to /quest endpoint",
      "key": "55ed5b50",
      "pending": false,
      "providerStates": [
        {
          "name": "at least one quest exists in the database"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/quest"
      },
      "response": {
        "body": {
          "content": [
            {
              "id": 1,
              "name": "string",
              "reward": "string",
              "status": "COMPLETED"
            }
          ],
          "contentType": "application/json; charset=UTF-8",
          "encoded": false
        },
        "generators": {
          "body": {
            "$[0].name": {
              "size": 20,
              "type": "RandomString"
            },
            "$[0].reward": {
              "size": 20,
              "type": "RandomString"
            },
            "$[0].status": {
              "regex": "NOT_STARTED|IN_PROGRESS|COMPLETED",
              "type": "Regex"
            }
          }
        },
        "headers": {
          "Content-Type": [
            "application/json; charset=UTF-8"
          ]
        },
        "matchingRules": {
          "body": {
            "$[0].id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "number"
                }
              ]
            },
            "$[0].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$[0].reward": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$[0].status": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "NOT_STARTED|IN_PROGRESS|COMPLETED"
                }
              ]
            }
          },
          "header": {
            "Content-Type": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ]
            }
          }
        },
        "status": 200
      },
      "transport": "http",
      "type": "Synchronous/HTTP"
    }
  ],
  "metadata": {
    "pact-jvm": {
      "version": "4.6.16"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "QuestManagerApi"
  }
}
